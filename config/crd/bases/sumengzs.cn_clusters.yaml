---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusters.sumengzs.cn
spec:
  group: sumengzs.cn
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The cluster endpoint
      jsonPath: .spec.endpoint
      name: ENDPOINT
      priority: 1
      type: string
    - description: The cluster enable status
      jsonPath: .spec.enabled
      name: ENABLE
      priority: 1
      type: boolean
    - description: The cluster provider
      jsonPath: .spec.provider
      name: PROVIDER
      priority: 1
      type: string
    - description: The cluster version
      jsonPath: .status.version
      name: VERSION
      type: string
    - description: The total number of node
      jsonPath: .status.nodeSummary.total
      name: TOTAL
      type: integer
    - description: The ready number of node
      jsonPath: .status.nodeSummary.ready
      name: READY
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              enabled:
                description: Desired state of the cluster
                type: boolean
              endpoint:
                description: 'Kubernetes API Server endpoint. hostname:port, IP or
                  IP:port. Example: https://10.10.0.1:6443'
                type: string
              kubeconfig:
                description: KubeConfig content used to connect to cluster api server
                format: byte
                type: string
              provider:
                description: Provider of the cluster, this field is just for description
                type: string
              proxyHeader:
                additionalProperties:
                  type: string
                description: 'ProxyHeader is the HTTP header required by proxy server.
                  The key in the key-value pair is HTTP header key and value is the
                  associated header payloads. For the header with multiple values,
                  the values should be separated by comma(e.g. ''k1'': ''v1,v2,v3'').'
                type: object
              proxyURL:
                description: 'ProxyURL is the proxy URL for the cluster. If not empty,
                  the multi-cluster control plane will use this proxy to talk to the
                  cluster. More details please refer to: https://github.com/kubernetes/client-go/issues/351'
                type: string
              region:
                description: Region represents the region of the member cluster locate
                  in.
                properties:
                  city:
                    description: City represents the city of the member cluster locate
                      in.
                    type: string
                  country:
                    description: Country represents the country of the member cluster
                      locate in.
                    type: string
                  province:
                    description: Province represents the province of the member cluster
                      locate in.
                    type: string
                  zone:
                    description: Zone represents the zone of the member cluster locate
                      in.
                    type: string
                type: object
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              apiEnablements:
                description: APIEnablements represents the list of APIs installed
                  in the member cluster.
                items:
                  description: APIEnablement is a list of API resource, it is used
                    to expose the name of the resources supported in a specific group
                    and version.
                  properties:
                    groupVersion:
                      description: GroupVersion is the group and version this APIEnablement
                        is for.
                      type: string
                    resources:
                      description: Resources is a list of APIResource.
                      items:
                        description: APIResource specifies the name and kind names
                          for the resource.
                        properties:
                          kind:
                            description: Kind is the kind for the resource (e.g. 'Deployment'
                              is the kind for resource 'deployments')
                            type: string
                          name:
                            description: Name is the plural name of the resource.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              conditions:
                description: Conditions is an array of current cluster conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodeSummary:
                description: NodeSummary represents the summary of nodes status in
                  the member cluster.
                properties:
                  ready:
                    description: ReadyNum is the number of ready nodes in the cluster.
                    format: int32
                    type: integer
                  total:
                    description: TotalNum is the total number of nodes in the cluster.
                    format: int32
                    type: integer
                type: object
              version:
                description: Version represents version of the member cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
